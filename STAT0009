# homework4.1
studentnumber18008852
---
title: 'HW4.1'
author: '18008852'
date: "2020/11/4"
output:
  html_document:
    code_download: true
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Abstract

The purpose of this exercise is as follows.

* To see if you can use R markdown.
* To work out any kinks with regards to on-line Moodle submission.
* In submitting answers to this homework, submit both the final generated html file and the Rmd source.

#  Plagiarism and collusion

Please familarize yourself with [the following excerpt on plagiarism and collusion from the student handbook ](https://tsoo-math.github.io/ucl/Plagiarism-Collusion.pdf)


By ticking the submission declaration box in Moodle you are agreeing to the following declaration:

<br>

**Declaration:** I am aware of the UCL Statistical Science Department's regulations on plagiarism for assessed coursework. I have read the guidelines in the student handbook and understand what constitutes plagiarism. I hereby affirm that the work I am submitting for this in-course assessment is entirely my own.



# Anonymous Marking 

Please do **not** write your name anywhere on the submission. Please include only your **student number** as the proxy identifier.



#  Mixing

Let $X$ be an aperiodic irreducible Markov chain on a finite state space $S$.   Let $\pi$ be its stationary measure, and assume that $X$ is started at $\pi$.    Let $a, b \in S$.   

*  Show that $$\lim_{n \to \infty} \mathbb{P}(X_0=a, X_n=b) = \pi(a)\pi(b).$$
*  Illustrate this fact in R, for a particular Markov chain of your choice, by running simulations.


# Solution

*  $$\lim_{n \to \infty} \mathbb{P}(X_0=a, X_n=b) =  \lim_{n \to \infty} \mathbb{P}(X_n=b | X_0=a) \mathbb{P}(x_0=a) =  \lim_{n \to \infty} \mathbb{P}(X_n=b | X_0=a) \pi(a)$$

Due to Markov Property:

  $$=\pi(a) \lim_{n \to \infty} \mathbb{P}(X_n=b) = \pi(a) \pi(b)$$



```{r}
P <- matrix(c(1/3, 1/3, 1/3, 1.4, 1/4, 1/2, 1/8, 1/4, 5/8),nrow = 3)
P <- t(P)
M = c(0.2, 0.2666667, 0.5333333)
RHS = M[1]*M[2]
RHS
step <- function(i){
  q = P[i,]
  x=-1
  u = runif(1)
  j=0
  cumq = cumsum(q)
  while(x==-1){
    j<-j+1
    if(u <= cumq[j]){x <-j}
  }
  x
}

steps <- function(n){
  x = 1
  for (i in 1:n){
    x <- c(x, step(x[i]))
  }
  x
}
stat = replicate(3000, steps(500))
endis2 = mean(stat[101,]==2)
LHS = endis2 * 0.2
LHS
```

#   Version: `r format(Sys.time(), '%d %B %Y')`
  * [Rmd Source](https://github.com/Shizhicheng/homework4.1/edit/main/STAT0009)
